on: [push]

jobs:

  # PRIMO WORKFLOW (che usa una custom action!!!!!)
  build:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: read
      issues: read
      pull-requests: write
    name: A job to say hello
    steps:
      - uses: actions/checkout@v3
      # Si potrebbe usare qualsiasi Id ma si usa per indicare delle variabili di input ed output!!!! (in questo caso si fa' riferimento ad un output!! random-number)
      - id: foo
        # poi si deve ricaricare esternamente!!!!!!
        #uses: giuseppegargani/first_custom_action@0.0.10
        uses: ./
        with:
          who-to-greet: 'Mona the Octocat'
      - run: echo random-number ${{ steps.foo.outputs.random-number }}
        shell: bash
      # - name: Stampa credenziali da Secret!!!
      #   run: echo ${{secrets.FIREBASE_CREDENTIALS}}
      # - name: Save in a file a secret
      #   run: echo ${{secrets.FIREBASE_CREDENTIALS }} | base64 --decode > ./gcloud.json
      #   shell: bash
      - name: Run Workflow
        id: write_file
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: 'tempCred.txt'
          fileDir: './'
          encodedString: ${{ secrets.FIREBASE_CREDENTIALS }}

      - id: set_var
        run: |
          content=`cat ./credentials.json`
          contenuto=`cat ./credentials.json`
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=converted::`fromJson($content)`"
          echo "::set-output name=packageJson::$content"
          echo "::set-output name=book::$contenuto"
        shell: bash


      # - name: Operazioni Firebase DB
      #   uses: w9jds/firebase-action@master
      #   with:
      #     args: database:set --force --debug  --project databasericette-beeb7 /giuseppegargani/ecchime PEPPE
      #   env:
      #     GCP_SA_KEY: ${{ steps.write_file.outputs.filePath }}

      # - name: ENVFILE
      #   uses: alekangelov/secret-envfile@v1
      #   with:
      #     content: ${{ secrets.FIREBASE_CREDENTIALS }}
      #     filename: giuseppe.env

      # - name: stampa echo
      #   run: |
      #     ls
      #     cat ./giuseppe.env
      #     giuseppe = $(cat ./giuseppe.env)
      #     echo "ecco il file $giuseppe"
      #   shell: bash

      # - name: Operazioni Firebase DB
      #   uses: w9jds/firebase-action@master
      #   with:
      #     args: database:set --force --debug  --project databasericette-beeb7 /giuseppegargani/ecchime PEPPE
      #   env:
      #     GCP_SA_KEY: ${{ secrets.FIREBASE_CREDENTIALS }}


      # #salvataggio del file json convertito in precedenza
      # - name: Update latest version in realtime database
      #   uses: w9jds/firebase-trigger@master
      #   #env:
      #     #GITHUB_CONTEXT: ${{ toJSON(github.repository) }}
      #     #NOME_REPOSITORY:
      #   with:
      #     #credentials: ./giuseppe.env
      #     credentials: ${{secrets.FIREBASE_CREDENTIALS}}
      #     databaseUrl: https://databasericette-beeb7.firebaseio.com
      #     path: "${{ github.repository }}"
      #     #Si devono mettere come segreto!!!
      #     value: "PEPPE!!"

      - name: Create Env file
        uses: alekangelov/secret-envfile@v1
        with:
          content: ${{ secrets.FIREBASE_CREDENTIALS }}
          filename: credentials.env

        # Si assegna un file ad una variabile ambientale
      - name: Lista filesystem
        run: |
          ls
          value=credentials.json
          echo "FOO=$value" >> $GITHUB_ENV
        shell: bash

      # - name: Si stampa la variabile AMBIENTALE
      #   run: |
      #     echo ${{env.FOO}}
      #     cat ${{env.FOO}}
      #     mike=$(cat ./credentials0.txt)
      #     echo $mike
      #     file1= credentials0.txt
      #     cat $file1
      #     cat credentials.env
      #     cat ./credentials.json
      #     fileGiuse = ./credentials.json
      #     giuse = fromJson(fileGiuse)
      #     echo "$giuse.type"
      #     echo "VALORE APPENA SCRITTO"
      #   #JSON = $(cat ./credentials.json)
      #   shell: bash

      - name: Set branch name as env variable
        run: |
          echo FILE=credentials.json >> $GITHUB_ENV

      # - name: Login Firebase Db
      #   uses: w9jds/firebase-action@master
      #   with:
      #     args: login:ci
      #   env:
      #     GCP_SA_KEY: "${{ toJSON(steps.outputs.set_var.packageJson) }}"

      - name: Operazioni Firebase DB
        uses: w9jds/firebase-action@master
        with:
          args: database:set --force --debug  --project databasericette-beeb7 /giuseppegargani/ecchime Example.json
        env:
          GCP_SA_KEY: "${{ fromJson(steps.outputs.set_var.book) }}"

      #salvataggio del file json convertito in precedenza
      # - name: Update latest version in realtime database
      #   uses: w9jds/firebase-trigger@master
      #   # env:
      #   #   VALORE: ${{toJson(steps.set_var.outputs.packageJson)}}
      #     #GITHUB_CONTEXT: ${{ toJSON(github.repository) }}
      #     #NOME_REPOSITORY:
      #   with:
      #     #credentials: fromJson($VALORE)
      #     credentials: "${{env.FILE}}"
      #     databaseUrl: https://databasericette-beeb7.firebaseio.com
      #     path: "${{ github.repository }}"
      #     #Si devono mettere come segreto!!!
      #     value: "PEPPE!!"

      # - name: Upload APK
      #   uses: actions/upload-artifact@v2.2.4
      #   with:
      #     name: credentials
      #     path: credentials.env

      # #salvataggio del file json convertito in precedenza
      # - name: Update latest version in realtime database
      #   uses: w9jds/firebase-trigger@master
      #   #env:
      #     #GITHUB_CONTEXT: ${{ toJSON(github.repository) }}
      #     #NOME_REPOSITORY:
      #   with:
      #     #credentials: ./giuseppe.env
      #     credentials: ${{env.FOO}}
      #     databaseUrl: https://databasericette-beeb7.firebaseio.com
      #     path: "${{ github.repository }}"
      #     #Si devono mettere come segreto!!!
      #     value: "PEPPE!!"
